%tr.change_row{:class => [version.event, version.item_type.downcase]}
  %td.change_time
    %span.change_id== Change ##{version.id}
    .date
      = version.created_at.strftime('%Y-%m-%d')
    .time
      = version.created_at.strftime('%H:%M:%S')
  %td.change_details
    %p.change_details_description
      %strong.event= version.event
      %span.item_type= version.item_type
      %span.item_id== ##{version.item_id}
      = change_item_link(version)
      - if PaperTrailManager.whodunnit_class
        - if version.whodunnit
          - if user = PaperTrailManager.whodunnit_class.find(version.whodunnit) rescue nil
            by
            = link_to(h(user.send(PaperTrailManager.whodunnit_name_method)), user_path(user))
      - if change_revert_allowed?(version)
        = link_to '[Rollback]', change_path(version), :method => 'put', :confirm => 'Are you sure?', :class => 'rollback'


    - if version.event == 'update' or version.event == 'create'
      - changes = changes_for(version)
      %table.change_details_table
        - changes.keys.sort.each do |key|
          %tr{:class => cycle('odd', 'even')}
            %td.change_detail_key.previous= key
            %td.change_detail_value.previous= text_or_nil(changes[key][:previous])
            %td.change_detail_spacer &rarr;
            %td.change_detail_value.current= text_or_nil(changes[key][:current])
        - reset_cycle('change_detail')
